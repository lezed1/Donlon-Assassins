script(src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js")

.row
  .col-md-offset-1.col-md-10
    .well
      table.table.table-hover.table-striped.sortable
        thead.noselect
          tr
            th(data-defaultsort='desc') Name
            th NetID
            th Tags
            - if game_state == :pregame
              th Verified?
            - else
              th Alive?
              th Target/Killed By
            th Secret
        tbody#table
          - Assassins::Player.all().each do |player|
            tr
              td = player.name
              td = player.netid
              td = player.kills
              - if game_state == :pregame
                - if player.is_verified
                  td(data-value="true")
                    span.label.label-default
                      i.glyphicon.glyphicon-user
                - else
                  td(data-value="false")
                    span.label.label-danger
                      i.glyphicon.glyphicon-remove
              - else
                - if player.is_verified
                  - if player.is_alive
                    td(data-value="true")
                      span.label.label-default
                        i.glyphicon.glyphicon-check
                    td.hover = player.target.name
                  - else
                    td.tagged(data-value="false" data-id=player.netid)
                      span.label.label-danger
                        i.glyphicon.glyphicon-remove
                    td.hover = player.tagged_by.name
                - else
                  td(data-value="false")
                    span.label.label-danger
                      i.glyphicon.glyphicon-remove
                  td
                    strong Did Not Play.
              td.hover = player.secret

- if game_state == :ingame
  coffee:
    $ ->
      $("#table").on "click", ".tagged", (e) ->
        el = $ e.currentTarget
        console.log "clicked on #{el.data "id"}"
        $.post "/admin/reinstate/#{el.data "id"}", (data, textStatus, jqXHR) ->
          location.reload()
